#!/bin/bash

# Makes sure the usb devices work between the host and docker container
# That is USB mouse, keyboard, cameras, control board(s), etc...
# 
# Also launches x11
x11_and_usb() {
	rm /tmp/.X0-lock &>/dev/null || true

	export DISPLAY=:0
	export DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket
	export UDEV=1

	# USB mouse/keyboard not responding on container: https://forums.balena.io/t/x11-hotplug-usb/7250/30
	if which udevadm > /dev/null; then
	  set +e # Disable exit on error
	  udevadm control --reload-rules
	  service udev restart
	  udevadm trigger
	  set -e # Re-enable exit on error
	fi

	echo "Starting X"
	startx
}


## Inspired by:
# https://github.com/nucleardreamer/xserver-web-vnc
# https://github.com/balena-io-playground/balena-vnc-example
no_vnc() {
	PASSWORD_FILE=/x11vnc-passwords
		cat <<EOF > $PASSWORD_FILE
		# This file is generated by start.sh. Do not edit.
		poltergeist
		$ACCESS_PASSWORD
		__BEGIN_VIEWONLY__
		bearwitness
		$VIEW_PASSWORD
EOF

	if [ -z $DISABLE_PASSWORDS ]; then
	    echo "Enabling password protection"
	    PASSWORD_OPT="-passwdfile $PASSWORD_FILE"
	else
	    echo "Disabling password protection"
	    PASSWORD_OPT=
	fi

	if [ -z $VIEW_ONLY ]; then
	    echo "Enabling view-only mode"
	    VIEWONLY_OPT=" -viewonly "
	else
	    echo "Disabling view-only mode"
	    VIEWONLY_OPT=
	fi

	echo "\n#"
	echo "# Starting x11vnc"
	echo "#"

	x11vnc \
	  -display $DISPLAY \
	  -listen localhost \
	  # -noshm \
	  -no6 \
	  -rfbport $VNC_PORT \
	  -nopw \
	  -shared \
	  -alwaysshared \
	  -bg \
	  -forever \
	  -quiet \
	  $VIEWONLY_OPT \
	  $PASSWORD_OPT

	echo "\n#"
	echo "# Starting novnc"
	echo "#\n"

	exec websockify --web /usr/share/novnc $WEB_PORT localhost:$VNC_PORT
}

x11_and_usb
no_vnc
