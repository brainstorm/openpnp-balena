FROM alwaysai/edgeiq-dev:jetson-latest

ENV DEBIAN_FRONTEND noninteractive
# Mouse/keyboard support
ENV UDEV=1

# Install desktop environment...
RUN apt-get update -y
RUN apt-get install -qq -y wget curl git vim openntpd iproute2 \
                           xserver-xorg-core xserver-xorg-input-all xinit xauth dbus-x11 usbutils \
                           icewm xterm firefox novnc x11vnc

# ...and required openpnp deps
RUN apt-get install -qq -y maven ant \
                     libjna-jni libjna-java libjna-platform-java libtiff5 libpng16-16 libpng-sixlegs-java libatlas3-base \
                     libgstreamer1.0-0 libgstreamer-plugins-base1.0-dev libgstreamer-gl1.0-0 \
                     libgstreamer-plugins-bad1.0-0 \
                     libv4l-0 libxvidcore4

RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Custom timezone for us, change at will
RUN echo "Australia/Melbourne" > /etc/timezone

# Setting working directory
WORKDIR /usr/src/app

# Download OpenPnP
RUN wget https://s3-us-west-2.amazonaws.com/openpnp/OpenPnP-linux-test.deb

# Download Corretto, since OpenJDK seems to be only available as JRE in Debian bullseye for ARM64
RUN wget https://corretto.aws/downloads/latest/amazon-corretto-11-aarch64-linux-jdk.deb
ENV JAVA_HOME /usr/lib/jvm/java-11-amazon-corretto

# Install Java and OpenPnP
RUN dpkg -i *.deb && rm *.deb

# Introduce the right openpnp-capture jar, the one that has arch-specific binaries for this target (aarch64)
RUN wget https://github.com/brainstorm/openpnp-capture-java/releases/download/v0.0.23/openpnp-capture-java-0.0.23.jar -O /opt/openpnp/lib/openpnp-capture-java-0.0.23.jar

# And the JNI system level hack
# Also read https://stackoverflow.com/questions/52500488/cant-obtain-static-method-fromnativemethod-object-from-class-com-sun-jna-nat
RUN ln -sf /usr/lib/aarch64-linux-gnu/jni/libjnidispatch.system.so /usr/lib/aarch64-linux-gnu/jni/libjnidispatch.so

# Prepare to start the kiosk
RUN wget https://raw.githubusercontent.com/cchs-melbourne/openpnp-kiosk/master/start.sh && chmod -x start.sh

# Provision OpenPNP configuration, to be refined with more machines and configs
# UDEV "dockerfriendly" tweak, inspired by https://dockerquestions.com/2020/05/28/why-udev-init-script-default-disable-container-support-while-in-fact-it-works/
#mkdir -p /root/.openpnp2 /root/.config && cd /root/.openpnp2 && \ <--- reenabling this when XML provisioning is verified
RUN wget https://raw.githubusercontent.com/CCHS-Melbourne/openpnp-kiosk/master/config/machine.xml && \
    wget https://raw.githubusercontent.com/CCHS-Melbourne/openpnp-kiosk/master/config/parts.xml && \
    wget https://raw.githubusercontent.com/CCHS-Melbourne/openpnp-kiosk/master/config/packages.xml && \
    wget https://raw.githubusercontent.com/CCHS-Melbourne/openpnp-kiosk/master/config/udev-dockerfriendly.sh -O /etc/init.d/udev && \
    mkdir -p /root/.icewm && wget https://raw.githubusercontent.com/CCHS-Melbourne/openpnp-kiosk/master/config/icewm-autostart.sh -O /root/.icewm/startup && \
    chmod +x /root/.icewm/startup && mkdir -p /root/.openpnp2 && \
    ln -sf /usr/src/app/machine.xml /root/.openpnp2/machine.xml && \
    ln -sf /usr/src/app/packages.xml /root/.openpnp2/packages.xml && \
    ln -sf /usr/src/app/parts.xml /root/.openpnp2/parts.xml && \
    wget https://raw.githubusercontent.com/CCHS-Melbourne/Graphics/master/Wallpaper/CCHS%20Wallpaper%20-%20Yellow%201280x800%2001.png -O /usr/src/app/cchs_wallpaper.png

# Add OpenPnP .desktop file on its appropriate system-wide location (should be handled by the .deb package eventually)
# https://www.xmodulo.com/create-desktop-shortcut-launcher-linux.html
RUN cp -a /opt/openpnp/OpenPnP.desktop /usr/share/applications


# Setup remove (no)VNC sessions, because we don't need to occupy USB ports
# with physical keybaords and mouse :)
RUN ln -s /usr/share/novnc/vnc.html /usr/share/novnc/index.html

# NoVNC port
EXPOSE 9090

CMD ["bash", "start.sh"]
